
QUERY/FIND DOCUMENTS
--------------------

1. get all documents
      db.movies.find().pretty()

2. get all documents with writer set to "Quentin Tarantino"
      db.movies.find({"writer":"Quentin Tarantino"}).pretty()

3. get all documents where actors include "Brad Pitt"
       db.movies.find({"actors":"Brad Pitt"}).pretty()

4. get all documents with franchise set to "The Hobbit"
       db.movies.find({"franchise":"The Hobbit"}).pretty()

5. get all movies released in the 90s
       db.movies.find({year:{$gte:"1990",$lte:"1999"}},{"title":1}).pretty()
   
6. get all movies released before the year 2000 or after 2010
       db.movies.find({$or:[{year:{$lt:"2000"}},{year:{$gte:"2010"}}]}).pretty()
    
 
 

UPDATE DOCUMENTS
-----------------

Answer 1)
db.movies.update({title: "The Hobbit: An Unexpected Journey"}, {$set: {synopsis: "A reluctant hobbit, Bilbo Baggins, sets out to the Lonely Mountain with a spirited group of dwarves to reclaim their mountain home - and the gold within it - from the dragon Smaug."}})

Answer 2)
db.movies.update({title: "The Hobbit: The Desolation of Smaug"}, {$set: {synopsis: "The dwarves, along with Bilbo Baggins and Gandalf the Grey, continue their quest to reclaim Erebor, their homeland, from Smaug. Bilbo Baggins is in possession of a mysterious and magical ring."}})

Answer 3)
db.movies.update({title: "Pulp Fiction"}, {$push: {actors: "Samuel L. Jackson"}})




TEXT SEARCH
------------

1
db.movies.createIndex({"synopsis":"text"})
db.movies.find({$text:{$search:"Bilbo"}}).pretty()
db.movies.find({$text:{$search:"Bilbo"}},{"title":1}).pretty()

2
db.movies.find({$text:{$search:"Gandalf"}}).pretty()
db.movies.find({$text:{$search:"Gandalf"}},{"title":1}).pretty()

3
db.movies.find({$and: [{synopsis: /Bilbo/}, {synopsis: {$not: /Gandalf/}}]}).pretty()
db.movies.find({$and: [{synopsis: /Bilbo/}, {synopsis: {$not: /Gandalf/}}]},{"title":1}).pretty()

4
db.movies.find({$or: [{synopsis: /.dwarves./}, {synopsis: /.hobbit./}]},{"title":1}).pretty()

5
db.movies.find({$and: [{synopsis: /.gold./}, {synopsis: /.dragon./}]}).pretty()
db.movies.find({$and: [{synopsis: /.gold./}, {synopsis: /.dragon./}]},{"title":1}).pretty()




DELETE DOCUMENTS
----------------

1:   db.movies.remove({title:"Pee Wee Herman's Big Adventure"})
2:   db.movies.remove({title:"Avatar"})




QUERYING RELATED TO COLLECTIONS
-------------------------------

1:   db.users.find({}).pretty()
2:   db.posts.find({}).pretty()
3:   db.posts.find({username: "GoodGuyGreg"}).pretty()
4:   db.posts.find({username: "ScumbagSteve"}).pretty()
5:   db.comments.find({}).pretty()
6:   db.comments.find({username: "GoodGuyGreg"}).pretty()
7:   db.comments.find({username: "ScumbagSteve"}).pretty()
8:   db.comments.find({post: db.posts.findOne({title: "Reports a bug in your code"})._id})